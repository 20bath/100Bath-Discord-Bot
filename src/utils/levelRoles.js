class LevelRoles {
    // ‡∏™‡∏µ‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á Level
    static getPastelColor(level) {
        const colors = [
            '#FFB3BA', // ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
            '#BAFFC9', // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
            '#BAE1FF', // ‡∏™‡∏µ‡∏ü‡πâ‡∏≤‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
            '#FFFFBA', // ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
            '#E8BAFF', // ‡∏™‡∏µ‡∏°‡πà‡∏ß‡∏á‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
            '#FFD1BA', // ‡∏™‡∏µ‡∏™‡πâ‡∏°‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
            '#B3FFF8', // ‡∏™‡∏µ‡πÄ‡∏ó‡∏≠‡∏£‡πå‡∏Ñ‡∏ß‡∏≠‡∏¢‡∏ã‡πå‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
            '#FFC8E6', // ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏≠‡πà‡∏≠‡∏ô‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
            '#D1FFB3', // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß‡∏≠‡πà‡∏≠‡∏ô‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
            '#B3F0FF'  // ‡∏™‡∏µ‡∏ü‡πâ‡∏≤‡∏≠‡πà‡∏≠‡∏ô‡∏û‡∏≤‡∏™‡πÄ‡∏ó‡∏•
        ];
        // ‡∏ß‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏™‡∏µ‡∏ã‡πâ‡∏≥‡∏ñ‡πâ‡∏≤ level ‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏µ
        return colors[level % colors.length];
    }

    // ‡∏£‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡∏®‡∏ï‡∏≤‡∏° Level
    static getRoleName(level) {
        return `üí´ Level ${level}`;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏¢‡∏®‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
    static async ensureRoleExists(guild, level) {
        try {
            const roleName = this.getRoleName(level);
            let role = guild.roles.cache.find(r => r.name === roleName);
    
            if (!role) {
                console.log(`‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏¢‡∏® ${roleName}...`);
                
                // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
                const botMember = guild.members.cache.get(guild.client.user.id);
                if (!botMember.permissions.has('MANAGE_ROLES')) {
                    console.error('Bot is missing MANAGE_ROLES permission');
                    return null;
                }
    
                try {
                    role = await guild.roles.create({
                        name: roleName,
                        color: this.getPastelColor(level),
                        reason: `Auto-created role for level ${level}`,
                        permissions: []
                    });
                    console.log(`‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏¢‡∏® ${roleName} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à`);
                } catch (createError) {
                    console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏¢‡∏® ${roleName}:`, createError);
                    return null;
                }
            }
    
            return role;
        } catch (error) {
            console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö/‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏¢‡∏®:', error);
            return null;
        }
    }

    // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏¢‡∏®‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ï‡∏≤‡∏° Level
    static async updateMemberRoles(member, newLevel) {
        try {
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ member object
            if (!member) {
                console.error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å');
                return false;
            }
    
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
            const botMember = member.guild.members.cache.get(member.guild.client.user.id);
            if (!botMember.permissions.has('MANAGE_ROLES')) {
                console.error('Bot is missing MANAGE_ROLES permission');
                return false;
            }
    
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏¢‡∏®‡πÉ‡∏´‡∏°‡πà‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
            const newRole = await this.ensureRoleExists(member.guild, newLevel);
            if (!newRole) {
                console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏´‡∏≤‡∏¢‡∏®‡πÑ‡∏î‡πâ');
                return false;
            }
    
            console.log(`‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏¢‡∏®‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${member.user.tag} ‡πÄ‡∏õ‡πá‡∏ô ${newRole.name}`);
    
            // ‡∏•‡∏ö‡∏¢‡∏® Level ‡πÄ‡∏Å‡πà‡∏≤
            const oldRoles = member.roles.cache.filter(role => 
                role.name.startsWith('üí´ Level ')
            );
            
            try {
                if (oldRoles.size > 0) {
                    await Promise.all(oldRoles.map(role => member.roles.remove(role)));
                    console.log(`‡∏•‡∏ö‡∏¢‡∏®‡πÄ‡∏Å‡πà‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${oldRoles.map(r => r.name).join(', ')}`);
                }
    
                // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏®‡πÉ‡∏´‡∏°‡πà
                await member.roles.add(newRole);
                console.log(`‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏®‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${newRole.name}`);
                return true;
            } catch (roleError) {
                console.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏¢‡∏®:', roleError);
                return false;
            }
        } catch (error) {
            console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏¢‡∏®:', error);
            return false;
        }
    }
}

module.exports = LevelRoles;