const { SlashCommandBuilder, EmbedBuilder } = require("discord.js");
const EconomySystem = require("../utils/economySystem");
const shop = require("../utils/shopSystem");
const QuestSystem = require("../utils/questDailySystem"); // Import QuestSystem

const TRANSFER_LIMITS = {
  MIN_AMOUNT: 100, // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏ó‡∏µ‡πà‡πÇ‡∏≠‡∏ô‡πÑ‡∏î‡πâ
  MAX_AMOUNT: 100000, // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏ó‡∏µ‡πà‡πÇ‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  COOLDOWN: 300000, // 5 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á
  FEE_PERCENT: 0.05, // ‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏° 5%
};

module.exports = {
  data: new SlashCommandBuilder()
    .setName("transfer")
    .setDescription("‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏∑‡πà‡∏ô")
    .addUserOption((option) =>
      option
        .setName("user")
        .setDescription("‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ")
        .setRequired(true)
    )
    .addIntegerOption((option) =>
      option
        .setName("amount")
        .setDescription("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô")
        .setRequired(true)
        .setMinValue(TRANSFER_LIMITS.MIN_AMOUNT)
        .setMaxValue(TRANSFER_LIMITS.MAX_AMOUNT)
    ),

  async execute(interaction) {
    try {
      const sender = interaction.user;
      const receiver = interaction.options.getUser("user");
      const amount = interaction.options.getInteger("amount");

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
      if (sender.id === receiver.id) {
        return interaction.reply({
          content: "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ",
          flags: ["Ephemeral"],
        });
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó
      if (receiver.bot) {
        return interaction.reply({
          content: "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡πÑ‡∏î‡πâ",
          flags: ["Ephemeral"],
        });
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cooldown
      const cooldown = await EconomySystem.checkCooldown(sender.id, "transfer");
      if (cooldown > 0) {
        const minutes = Math.ceil(cooldown / 60000);
        return interaction.reply({
          content: `‚è∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠ ${minutes} ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏Å‡πà‡∏≠‡∏ô‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á`,
          flags: ["Ephemeral"],
        });
      }

      const effects = await shop.checkEffects(sender.id); // Fix: Changed fromId to sender.id
      const feeReduction = effects.fee_reduction || 0;

      // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°‡πÇ‡∏î‡∏¢‡∏Ñ‡∏≥‡∏ô‡∏∂‡∏á‡∏ñ‡∏∂‡∏á fee reduction
      const baseFee = Math.floor(amount * TRANSFER_LIMITS.FEE_PERCENT);
      const reducedFeePercent = Math.max(0, TRANSFER_LIMITS.FEE_PERCENT * (1 - feeReduction));
      const fee = Math.floor(amount * reducedFeePercent);
      const totalAmount = amount + fee;

      // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°
      const feeReductionPercent = Math.floor(feeReduction * 100);
      const actualFeePercent = Math.floor(reducedFeePercent * 100);

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô
      const senderProfile = await EconomySystem.getProfile(sender.id);
      if (!senderProfile || senderProfile.balance < totalAmount) {
        return interaction.reply({
          content: `‚ùå ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠ (‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ${totalAmount} ‡∏ö‡∏≤‡∏ó ‡∏£‡∏ß‡∏°‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏° ${fee} ‡∏ö‡∏≤‡∏ó)`,
          flags: ["Ephemeral"],
        });
      }
      await QuestSystem.updateQuestProgress(
        sender.id,
        'transfer_amount',
        totalAmount
    );
      // ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
      await EconomySystem.addMoney(sender.id, -totalAmount);
      await EconomySystem.addMoney(receiver.id, amount);

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô
      await EconomySystem.updateProfile(sender.id, {
        "stats.transferStats.sent.total":
          senderProfile.stats.transferStats.sent.total + amount,
        "stats.transferStats.sent.count":
          senderProfile.stats.transferStats.sent.count + 1,
        "stats.transferStats.sent.largest": Math.max(
          senderProfile.stats.transferStats.sent.largest,
          amount
        ),
        "stats.transferStats.sent.fees":
          senderProfile.stats.transferStats.sent.fees + fee,
        "stats.totalLost": senderProfile.stats.totalLost + fee,
      });

      // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö
      const receiverProfile = await EconomySystem.getProfile(receiver.id);
      await EconomySystem.updateProfile(receiver.id, {
        "stats.transferStats.received.total":
          receiverProfile.stats.transferStats.received.total + amount,
        "stats.transferStats.received.count":
          receiverProfile.stats.transferStats.received.count + 1,
        "stats.transferStats.received.largest": Math.max(
          receiverProfile.stats.transferStats.received.largest,
          amount
        ),
      });

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
      const embed = new EmbedBuilder()
        .setTitle("üí∏ ‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        .setColor("#00ff00")
        .addFields(
          {
            name: "üë§ ‡∏ú‡∏π‡πâ‡πÇ‡∏≠‡∏ô",
            value: sender.username,
            inline: true,
          },
          {
            name: "üë• ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö",
            value: receiver.username,
            inline: true,
          },
          {
            name: "üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô",
            value: `${amount} ‡∏ö‡∏≤‡∏ó`,
            inline: true,
          },
          {
            name: "üíµ ‡∏Ñ‡πà‡∏≤‡∏ò‡∏£‡∏£‡∏°‡πÄ‡∏ô‡∏µ‡∏¢‡∏°",
            value: `${fee.toLocaleString()} ‡∏ö‡∏≤‡∏ó (${actualFeePercent}%${feeReductionPercent > 0 ? ` -${feeReductionPercent}% ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏î` : ''})`,
            inline: true,
          },
          {
            name: "üí≥ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏´‡∏±‡∏Å",
            value: `${totalAmount} ‡∏ö‡∏≤‡∏ó`,
            inline: true,
          }
        )
        .setTimestamp();

      // ‡∏ï‡∏±‡πâ‡∏á cooldown
      await EconomySystem.setCooldown(
        sender.id,
        "transfer",
        TRANSFER_LIMITS.COOLDOWN
      );

      // ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error("Error in transfer command:", error);
      await interaction.reply({
        content: "‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô",
        flags: ["Ephemeral"],
      });
    }
  },
};
