const { 
    SlashCommandBuilder, 
    EmbedBuilder, 
    ActionRowBuilder, 
    StringSelectMenuBuilder,
    ButtonBuilder, 
    ButtonStyle 
} = require('discord.js');
const ShopSystem = require('../utils/shopSystem');
const EconomySystem = require('../utils/economySystem');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('shop')
        .setDescription('‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡πÅ‡∏•‡∏∞‡∏¢‡∏®‡∏û‡∏¥‡πÄ‡∏®‡∏© (‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ)'),

    async execute(interaction) {
        try {
            const profile = await EconomySystem.getProfile(interaction.user.id);
            
            // ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡∏´‡∏•‡∏±‡∏Å
            const embed = new EmbedBuilder()
                .setTitle('üè™ ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏ñ‡πâ‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏õ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö)')
                .setColor('#ffd700')
                .setDescription('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£')
                .addFields({
                    name: 'üí∞ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
                    value: `${profile.balance} ‡∏ö‡∏≤‡∏ó`,
                    inline: true
                });

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á select menu ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
            const categorySelect = new StringSelectMenuBuilder()
                .setCustomId('shop_category')
                .setPlaceholder('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà')
                .addOptions([
                    {
                        label: '‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ñ‡∏≤‡∏ß‡∏£',
                        description: '‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î',
                        value: 'permanent',
                        emoji: 'üõ°Ô∏è'
                    },
                    {
                        label: '‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß',
                        description: '‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏≥‡∏Å‡∏±‡∏î',
                        value: 'temporary',
                        emoji: '‚è≥'
                    },
                    {
                        label: '‡∏¢‡∏®‡∏û‡∏¥‡πÄ‡∏®‡∏©',
                        description: '‡∏¢‡∏®‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©',
                        value: 'roles',
                        emoji: 'üëë'
                    }
                ]);

            const row = new ActionRowBuilder().addComponents(categorySelect);
            const response = await interaction.reply({ 
                embeds: [embed], 
                components: [row],
                fetchReply: true 
            });

            // ‡∏™‡∏£‡πâ‡∏≤‡∏á collector ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö select menu
            const collector = response.createMessageComponentCollector({ 
                time: 60000 
            });

            collector.on('collect', async i => {
                if (i.user.id !== interaction.user.id) {
                    return i.reply({ 
                        content: '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ‡πÑ‡∏î‡πâ', 
                        ephemeral: true 
                    });
                }

                if (i.customId === 'shop_category') {
                    const category = i.values[0];
                    const items = ShopSystem.getShopItems()[category];

                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
                    const categoryEmbed = new EmbedBuilder()
                        .setTitle(`üè™ ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤ - ${getCategoryName(category)}`)
                        .setColor('#ffd700')
                        .setDescription('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠')
                        .addFields({
                            name: 'üí∞ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì',
                            value: `${profile.balance} ‡∏ö‡∏≤‡∏ó`,
                            inline: true
                        });

                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÑ‡∏≠‡πÄ‡∏ó‡∏°
                    const buttons = Object.values(items).map(item => {
                        return new ButtonBuilder()
                            .setCustomId(`buy_${item.id}`)
                            .setLabel(`${item.name} (${item.price} ‡∏ö‡∏≤‡∏ó)`)
                            .setStyle(ButtonStyle.Primary)
                            .setDisabled(profile.balance < item.price);
                    });

                    // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏õ‡∏∏‡πà‡∏° (‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 5 ‡∏õ‡∏∏‡πà‡∏°‡∏ï‡πà‡∏≠‡πÅ‡∏ñ‡∏ß)
                    const buttonRows = [];
                    for (let i = 0; i < buttons.length; i += 5) {
                        buttonRows.push(
                            new ActionRowBuilder().addComponents(buttons.slice(i, i + 5))
                        );
                    }

                    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö
                    const backButton = new ButtonBuilder()
                        .setCustomId('shop_back')
                        .setLabel('‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å')
                        .setStyle(ButtonStyle.Secondary);

                    buttonRows.push(new ActionRowBuilder().addComponents(backButton));

                    await i.update({ 
                        embeds: [categoryEmbed], 
                        components: buttonRows 
                    });
                } else if (i.customId.startsWith('buy_')) {
                    const itemId = i.customId.replace('buy_', '');
                    const result = await ShopSystem.buyItem(
                        i.user.id, 
                        itemId,
                        interaction.guildId
                    );

                    if (!result.success) {
                        const errorMessages = {
                            'insufficient_funds': '‚ùå ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠',
                            'already_owned': '‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß',
                            'item_not_found': '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ô‡∏µ‡πâ',
                        };

                        await i.reply({
                            content: errorMessages[result.reason] || '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
                            ephemeral: true
                        });
                        return;
                    }

                    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠
                    const successEmbed = new EmbedBuilder()
                        .setTitle('‚úÖ ‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
                        .setColor('#00ff00')
                        .addFields(
                            {
                                name: 'üéÅ ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°',
                                value: result.item.name,
                                inline: true
                            },
                            {
                                name: 'üí∞ ‡∏£‡∏≤‡∏Ñ‡∏≤',
                                value: `${result.item.price} ‡∏ö‡∏≤‡∏ó`,
                                inline: true
                            },
                            {
                                name: 'üíµ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
                                value: `${result.newBalance} ‡∏ö‡∏≤‡∏ó`,
                                inline: true
                            }
                        );

                    await i.reply({ 
                        embeds: [successEmbed], 
                        ephemeral: true 
                    });
                } else if (i.customId === 'shop_back') {
                    await i.update({ 
                        embeds: [embed], 
                        components: [row] 
                    });
                }
            });

            collector.on('end', () => {
                interaction.editReply({ 
                    components: [] 
                });
            });

        } catch (error) {
            console.error('Shop error:', error);
            await interaction.reply({
                content: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡πâ‡∏≤',
                ephemeral: true
            });
        }
    }
};

function getCategoryName(category) {
    const names = {
        permanent: 'üõ°Ô∏è ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ñ‡∏≤‡∏ß‡∏£',
        temporary: '‚è≥ ‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß',
        roles: 'üëë ‡∏¢‡∏®‡∏û‡∏¥‡πÄ‡∏®‡∏©'
    };
    return names[category] || category;
}