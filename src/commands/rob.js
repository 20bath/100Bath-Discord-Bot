const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const EconomySystem = require('../utils/economySystem');

const ROB_CONFIG = {
    COOLDOWN: 3600000, // 1 hour cooldown
    MIN_MONEY_TO_ROB: 500, // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡∏õ‡∏•‡πâ‡∏ô‡πÑ‡∏î‡πâ
    SUCCESS_RATE: 40, // 40% ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    MAX_STEAL_PERCENT: 30, // ‡∏õ‡∏•‡πâ‡∏ô‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 30% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤
    FINE_PERCENT: 50 // ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö 50% ‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏à‡∏∞‡∏õ‡∏•‡πâ‡∏ô
};

module.exports = {
    data: new SlashCommandBuilder()
        .setName('rob')
        .setDescription('‡∏õ‡∏•‡πâ‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏∑‡πà‡∏ô')
        .addUserOption(option =>
            option
                .setName('target')
                .setDescription('‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πâ‡∏ô')
                .setRequired(true)
        ),

    async execute(interaction) {
        try {
            const robber = interaction.user;
            const target = interaction.options.getUser('target');

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
            if (robber.id === target.id) {
                return interaction.reply({
                    content: '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏•‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ',
                    flags: ['Ephemeral']
                });
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πâ‡∏ô‡∏ö‡∏≠‡∏ó
            if (target.bot) {
                return interaction.reply({
                    content: '‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏•‡πâ‡∏ô‡∏ö‡∏≠‡∏ó‡πÑ‡∏î‡πâ',
                    flags: ['Ephemeral']
                });
            }

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cooldown
            const cooldown = await EconomySystem.checkCooldown(robber.id, 'rob');
            if (cooldown > 0) {
                const minutes = Math.ceil(cooldown / 60000);
                return interaction.reply({
                    content: `‚è∞ ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠ ${minutes} ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∞‡∏õ‡∏•‡πâ‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á`,
                    flags: ['Ephemeral']
                });
            }

            // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏≠‡∏á‡∏ù‡πà‡∏≤‡∏¢
            const robberProfile = await EconomySystem.getProfile(robber.id);
            const targetProfile = await EconomySystem.getProfile(target.id);

            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏Ç‡∏≠‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
            if (targetProfile.balance < ROB_CONFIG.MIN_MONEY_TO_ROB) {
                return interaction.reply({
                    content: '‚ùå ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡∏ô‡πâ‡∏≠‡∏¢‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡πÑ‡∏°‡πà‡∏Ñ‡∏∏‡πâ‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏õ‡∏•‡πâ‡∏ô',
                    flags: ['Ephemeral']
                });
            }

            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏õ‡∏•‡πâ‡∏ô
            const maxSteal = Math.floor(targetProfile.balance * (ROB_CONFIG.MAX_STEAL_PERCENT / 100));
            const stealAmount = Math.floor(Math.random() * maxSteal) + 1;

            // ‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
            const success = Math.random() * 100 < ROB_CONFIG.SUCCESS_RATE;

            if (success) {
                // ‡∏õ‡∏•‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                await EconomySystem.addMoney(robber.id, stealAmount);
                await EconomySystem.addMoney(target.id, -stealAmount);

                const embed = new EmbedBuilder()
                    .setTitle('ü¶π ‡∏õ‡∏•‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
                    .setColor('#00ff00')
                    .setDescription(`‡∏Ñ‡∏∏‡∏ì‡∏õ‡∏•‡πâ‡∏ô ${target.username} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`)
                    .addFields(
                        { 
                            name: 'üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏•‡πâ‡∏ô‡πÑ‡∏î‡πâ',
                            value: `${stealAmount} ‡∏ö‡∏≤‡∏ó`,
                            inline: true
                        },
                        {
                            name: 'üíµ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô',
                            value: `${robberProfile.balance + stealAmount} ‡∏ö‡∏≤‡∏ó`,
                            inline: true
                        }
                    )
                    .setFooter({ text: 'üí° ‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏à‡∏∞‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πâ‡∏ô' })
                    .setTimestamp();

                await interaction.reply({ embeds: [embed] });
            } else {
                // ‡∏õ‡∏•‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
                const fine = Math.floor(stealAmount * (ROB_CONFIG.FINE_PERCENT / 100));
                await EconomySystem.addMoney(robber.id, -fine);

                const embed = new EmbedBuilder()
                    .setTitle('üöî ‡∏õ‡∏•‡πâ‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')
                    .setColor('#ff0000')
                    .setDescription(`‡∏Ñ‡∏∏‡∏ì‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏à‡∏∞‡∏õ‡∏•‡πâ‡∏ô ${target.username} ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!`)
                    .addFields(
                        {
                            name: 'üí∏ ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö',
                            value: `${fine} ‡∏ö‡∏≤‡∏ó`,
                            inline: true
                        },
                        {
                            name: 'üíµ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠',
                            value: `${robberProfile.balance - fine} ‡∏ö‡∏≤‡∏ó`,
                            inline: true
                        }
                    )
                    .setFooter({ text: 'üò¢ ‡πÇ‡∏ä‡∏Ñ‡πÑ‡∏°‡πà‡∏î‡∏µ ‡πÇ‡∏î‡∏ô‡∏à‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ã‡∏∞‡πÅ‡∏•‡πâ‡∏ß' })
                    .setTimestamp();

                await interaction.reply({ embeds: [embed] });
            }

            // ‡∏ï‡∏±‡πâ‡∏á cooldown
            await EconomySystem.setCooldown(robber.id, 'rob', ROB_CONFIG.COOLDOWN);

        } catch (error) {
            console.error('Error in rob command:', error);
            await interaction.reply({
                content: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πâ‡∏ô',
                flags: ['Ephemeral']
            });
        }
    },
};