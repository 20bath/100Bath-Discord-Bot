const { PermissionFlagsBits , EmbedBuilder, ButtonBuilder, ActionRowBuilder } = require("discord.js");
module.exports = (client) => {

    client.on("messageCreate", async (message) => {

        if (!message.guild || !message.member?.permissions.has(PermissionFlagsBits.Administrator)) return;
        // ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÑ‡∏î‡πâ      
        if (message.content === "!testjoin") {
          // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Ñ‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤
          client.emit("guildMemberAdd", message.member);
          message.reply("üîß Testing member join event...");
        }
      
        if (message.content === "!testleave") {
          // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Ñ‡∏ô‡∏≠‡∏≠‡∏Å
          client.emit("guildMemberRemove", message.member);
          message.reply("üîß Testing member leave event...");
        }



        // !announce #channel | ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ | ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        // !announce #announcements | ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏∞‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà | ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢!
        // !maintenance ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ | ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•
        // !maintenance 30 ‡∏ô‡∏≤‡∏ó‡∏µ | ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏ô‡∏±‡∏ô


        // ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á
        if (message.content.startsWith('!maintenance')) {
            try {
                const args = message.content.slice('!maintenance'.length).trim().split('|');
                const time = args[0]?.trim() || '0 ‡∏ô‡∏≤‡∏ó‡∏µ';
                const reason = args[1]?.trim() || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•';
        
                const maintenanceEmbed = new EmbedBuilder()
                    .setTitle('üõ†Ô∏è ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö')
                    .setColor('#ff0000')
                    .setDescription(
                        '```diff\n' +
                        '- ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß\n' +
                        '```\n' +
                        `‚è∞ ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤: ${time}\n` +
                        `üìù ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${reason}\n\n` +
                        'üôè ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏°‡πà‡∏™‡∏∞‡∏î‡∏ß‡∏Å'
                    )
                    .setTimestamp()
                    .setFooter({ 
                        text: `‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÇ‡∏î‡∏¢ ${message.author.tag}`,
                        iconURL: message.author.displayAvatarURL()
                    });
        
                // ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ó‡∏∏‡∏Å Channel ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                const announceChannels = [
                    process.env.ANNOUNCE_CHANNEL_ID,
                ];
        
                const sentMessages = [];
                for (const channelId of announceChannels) {
                    const channel = client.channels.cache.get(channelId);
                    if (channel) {
                        const sent = await channel.send({ embeds: [maintenanceEmbed] });
                        sentMessages.push(sent);
                    }
                }
        
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°
                const buttons = new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                            .setCustomId('maintenance_cancel')
                            .setLabel('‚ùå ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á')
                            .setStyle('Danger'),
                        new ButtonBuilder()
                            .setCustomId('maintenance_complete')
                            .setLabel('‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á')
                            .setStyle('Success')
                    );
        
                // ‡∏™‡πà‡∏á DM ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°
                const controlEmbed = new EmbedBuilder()
                    .setTitle('üéÆ ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö')
                    .setColor('#0099ff')
                    .setDescription(
                        '**‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:** ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á\n' +
                        `‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÅ‡∏à‡πâ‡∏á: ${time}\n` +
                        `üìù ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: ${reason}\n\n` +
                        '**‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°:**\n' +
                        '‚Ä¢ ‡∏Å‡∏î ‚ùå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á\n' +
                        '‚Ä¢ ‡∏Å‡∏î ‚úÖ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô'
                    );
        
                const dm = await message.author.send({
                    embeds: [controlEmbed],
                    components: [buttons]
                });
        
                // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏∏‡πà‡∏°
                const maintenanceData = {
                    announceMessages: sentMessages,
                    time: time,
                    reason: reason,
                    authorId: message.author.id
                };
        
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á collector ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°
                const collector = dm.createMessageComponentCollector({
                    filter: i => i.user.id === message.author.id,
                    time: 24 * 60 * 60 * 1000 // 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
                });
        
                collector.on('collect', async i => {
                    if (i.customId === 'maintenance_cancel') {
                        const cancelEmbed = new EmbedBuilder()
                            .setTitle('üö´ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö')
                            .setColor('#ffff00')
                            .setDescription(
                                '```diff\n' +
                                '+ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å\n' +
                                '```\n' +
                                '‚ö° ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥'
                            )
                            .setTimestamp();
        
                        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ó‡∏∏‡∏Å channel
                        for (const msg of maintenanceData.announceMessages) {
                            await msg.reply({ embeds: [cancelEmbed] });
                        }
        
                        await i.update({ 
                            embeds: [controlEmbed.setDescription('**‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:** ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á ‚úÖ')],
                            components: [] 
                        });
                    }
                    else if (i.customId === 'maintenance_complete') {
                        const completeEmbed = new EmbedBuilder()
                            .setTitle('‚úÖ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô')
                            .setColor('#00ff00')
                            .setDescription(
                                '```diff\n' +
                                '+ ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå\n' +
                                '```\n' +
                                '‚ö° ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏õ‡∏Å‡∏ï‡∏¥'
                            )
                            .setTimestamp();
        
                        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏ó‡∏∏‡∏Å channel
                        for (const msg of maintenanceData.announceMessages) {
                            await msg.reply({ embeds: [completeEmbed] });
                        }
        
                        await i.update({ 
                            embeds: [controlEmbed.setDescription('**‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞:** ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á ‚úÖ')],
                            components: [] 
                        });
                    }
                });
        
                message.reply('‚úÖ ‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö DM ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®');
        
            } catch (error) {
                console.error('Error in maintenance command:', error);
                message.reply('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®');
            }
        }
    })
        
  };