const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const bankSystem = require('../utils/bankSystem.js');
const levelSystem = require('../utils/levelSystem');
const EconomySystem = require('../utils/economySystem');


// ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 1% ‡∏ï‡πà‡∏≠‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
// ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡πÄ‡∏á‡∏¥‡∏ô‡∏ù‡∏≤‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ 1,000 ‡∏ö‡∏≤‡∏ó
// ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î 10,000 ‡∏ö‡∏≤‡∏ó‡∏ï‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á
// ‡∏à‡πà‡∏≤‡∏¢‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ó‡∏∏‡∏Å 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
// ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ
// ‡πÄ‡∏Å‡πá‡∏ö‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

module.exports = {
    data: new SlashCommandBuilder()
        .setName('bank')
        .setDescription('‡∏£‡∏∞‡∏ö‡∏ö‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£')
        .addSubcommand(subcommand =>
            subcommand
                .setName('deposit')
                .setDescription('‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£')
                .addIntegerOption(option =>
                    option
                        .setName('amount')
                        .setDescription('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å')
                        .setRequired(true)
                        .setMinValue(100)
                )
        )
        .addSubcommand(subcommand =>
            subcommand
                .setName('withdraw')
                .setDescription('‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£')
                .addIntegerOption(option =>
                    option
                        .setName('amount')
                        .setDescription('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô')
                        .setRequired(true)
                        .setMinValue(100)
                )
        )
        .addSubcommand(subcommand =>
            subcommand
                .setName('balance')
                .setDescription('‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£')
        ),

    async execute(interaction) {
        try {
            const subcommand = interaction.options.getSubcommand();

            switch (subcommand) {
                case 'deposit': {
                    const amount = interaction.options.getInteger('amount');
                    
                    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cooldown
                    const cooldown = await EconomySystem.checkCooldown(interaction.user.id, 'bank');
                    if (cooldown > 0) {
                        return interaction.reply({
                            content: `‚è∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠ ${Math.ceil(cooldown / 1000)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`,
                            flags: ['Ephemeral']
                        });
                    }

                    // ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô
                    const result = await bankSystem.deposit(interaction.user.id, amount);

                    if (!result.success) {
                        const errorMessages = {
                            'insufficient_funds': '‚ùå ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠',
                            'bank_limit': '‚ùå ‡πÄ‡∏Å‡∏¥‡∏ô‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏á‡∏¥‡∏ô‡∏ù‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£',
                            'no_profile': '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô'
                        };
                        return interaction.reply({
                            content: errorMessages[result.reason] || '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô',
                            flags: ['Ephemeral']
                        });
                    }

                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
                    const embed = new EmbedBuilder()
                        .setTitle('üè¶ ‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
                        .setColor('#00ff00')
                        .addFields(
                            {
                                name: 'üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏≤‡∏Å',
                                value: `${amount} ‡∏ö‡∏≤‡∏ó`,
                                inline: true
                            },
                            {
                                name: 'üíµ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤',
                                value: `${result.newBalance} ‡∏ö‡∏≤‡∏ó`,
                                inline: true
                            },
                            {
                                name: 'üè¶ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£',
                                value: `${result.newBankBalance} ‡∏ö‡∏≤‡∏ó`,
                                inline: true
                            }
                        )
                        .setFooter({ text: 'üí° ‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏à‡∏∞‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡πâ‡∏ô' })
                        .setTimestamp();

                    // ‡∏ï‡∏±‡πâ‡∏á cooldown 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                    await EconomySystem.setCooldown(interaction.user.id, 'bank', 10000);

                    await interaction.reply({ embeds: [embed] });
                    break;
                }

                case 'withdraw': {
                    const amount = interaction.options.getInteger('amount');
                    
                    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö cooldown
                    const cooldown = await EconomySystem.checkCooldown(interaction.user.id, 'bank');
                    if (cooldown > 0) {
                        return interaction.reply({
                            content: `‚è∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠ ${Math.ceil(cooldown / 1000)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`,
                            flags: ['Ephemeral']
                        });
                    }

                    // ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
                    const result = await bankSystem.withdraw(interaction.user.id, amount);

                    if (!result.success) {
                        const errorMessages = {
                            'insufficient_funds': '‚ùå ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡πÑ‡∏°‡πà‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠',
                            'no_profile': '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô'
                        };
                        return interaction.reply({
                            content: errorMessages[result.reason] || '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô',
                            flags: ['Ephemeral']
                        });
                    }

                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á embed ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
                    const embed = new EmbedBuilder()
                        .setTitle('üè¶ ‡∏ñ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à')
                        .setColor('#00ff00')
                        .addFields(
                            {
                                name: 'üí∞ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏≠‡∏ô',
                                value: `${amount} ‡∏ö‡∏≤‡∏ó`,
                                inline: true
                            },
                            {
                                name: 'üíµ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤',
                                value: `${result.newBalance} ‡∏ö‡∏≤‡∏ó`,
                                inline: true
                            },
                            {
                                name: 'üè¶ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£',
                                value: `${result.newBankBalance} ‡∏ö‡∏≤‡∏ó`,
                                inline: true
                            }
                        )
                        .setFooter({ text: 'üí° ‡∏£‡∏∞‡∏ß‡∏±‡∏á! ‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏≠‡∏≤‡∏à‡∏ñ‡∏π‡∏Å‡∏õ‡∏•‡πâ‡∏ô‡πÑ‡∏î‡πâ' })
                        .setTimestamp();

                    // ‡∏ï‡∏±‡πâ‡∏á cooldown 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                    await EconomySystem.setCooldown(interaction.user.id, 'bank', 10000);

                    await interaction.reply({ embeds: [embed] });
                    break;
                }

                case 'balance': {
                    const profile = await EconomySystem.getProfile(interaction.user.id);
                    const level = await levelSystem.getLevel(interaction.user.id);
                    const nextLevelLimit = 10000 + ((level + 1) * 1000);
                
                    // Process interest
                    const interestResult = await bankSystem.processInterest(interaction.user.id);
                    let interestField = '';
                    
                    if (interestResult.success && interestResult.amount) {
                        interestField = `\nüí∞ ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö: ${interestResult.amount} ‡∏ö‡∏≤‡∏ó`;
                    } else if (interestResult.timeRemaining) {
                        const minutesRemaining = Math.ceil(interestResult.timeRemaining / 60000);
                        interestField = `\n‚è∞ ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏£‡∏≠‡∏ö‡∏ñ‡∏±‡∏î‡πÑ‡∏õ: ${minutesRemaining} ‡∏ô‡∏≤‡∏ó‡∏µ`;
                    }
                
                    const embed = new EmbedBuilder()
                        .setTitle('üè¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£')
                        .setColor('#0099ff')
                        .addFields(
                            {
                                name: 'üí∞ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£',
                                value: `${profile.bankBalance} ‡∏ö‡∏≤‡∏ó${interestField}`,
                                inline: true
                            },
                            {
                                name: 'üíµ ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤',
                                value: `${profile.balance} ‡∏ö‡∏≤‡∏ó`,
                                inline: true
                            },
                            {
                                name: 'üìä ‡∏•‡∏¥‡∏°‡∏¥‡∏ï‡πÄ‡∏á‡∏¥‡∏ô‡∏ù‡∏≤‡∏Å',
                                value: `${profile.bankLimit} ‡∏ö‡∏≤‡∏ó\n‚¨ÜÔ∏è ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏ñ‡∏±‡∏î‡πÑ‡∏õ: ${nextLevelLimit} ‡∏ö‡∏≤‡∏ó`,
                                inline: true
                            },
                            {
                                name: 'üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£',
                                value: 
                                    `‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏£‡∏ß‡∏°: ${profile.stats.bankStats.totalDeposits} ‡∏ö‡∏≤‡∏ó\n` +
                                    `‡∏ù‡∏≤‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: ${profile.stats.bankStats.largestDeposit} ‡∏ö‡∏≤‡∏ó\n` +
                                    `‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏£‡∏ß‡∏°: ${profile.stats.bankStats.totalInterestEarned || 0} ‡∏ö‡∏≤‡∏ó\n` +
                                    `‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${level}`,
                                inline: false
                            }
                        )
                        .setFooter({ 
                            text: `üí° ‡∏ù‡∏≤‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥ ${EconomySystem.INTEREST_CONFIG.MIN_BALANCE} ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ ${EconomySystem.INTEREST_CONFIG.RATE * 100}% ‡∏ó‡∏∏‡∏Å‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á` 
                        })
                        .setTimestamp();
                
                    await interaction.reply({ embeds: [embed] });
                    break;
                }
            }
        } catch (error) {
            console.error('Error in bank command:', error);
            await interaction.reply({
                content: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£',
                flags: ['Ephemeral']
            });
        }
    },
};