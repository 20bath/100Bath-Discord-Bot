const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const GachaSystem = require('../utils/gachaSystem');
const economy = require('../utils/economySystem');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('gacha')
        .setDescription('‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏ä‡∏≤‡∏î‡πâ‡∏ß‡∏¢ 100BathGem')
        .addSubcommand(subcommand =>
            subcommand
                .setName('pull')
                .setDescription('‡∏™‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏ä‡∏≤ 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á')
        )
        .addSubcommand(subcommand =>
            subcommand
                .setName('info')
                .setDescription('‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏î‡∏£‡∏≠‡∏õ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•')
        ),

    async execute(interaction) {
        const subcommand = interaction.options.getSubcommand();

        if (subcommand === 'info') {
            const infoEmbed = new EmbedBuilder()
                .setTitle('üé∞ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏ä‡∏≤')
                .setColor('#00ff00')
                .setDescription('```\n‡πÉ‡∏ä‡πâ 100BathGem ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏™‡∏∏‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏©!\n```')
                .addFields(
                    {
                        name: 'üíé ‡∏£‡∏≤‡∏Ñ‡∏≤',
                        value: `${GachaSystem.costPerPull} 100BathGem ‡∏ï‡πà‡∏≠‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡πà‡∏° 1 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á`,
                        inline: false
                    },
                    {
                        name: 'üìä ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏Å‡∏≤‡∏£‡∏î‡∏£‡∏≠‡∏õ',
                        value: 
                        '```\n' +
                        'SSR (‡∏¢‡∏®‡∏û‡∏¥‡πÄ‡∏®‡∏©)     : 0.5%\n' +
                        'SR (‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ñ‡∏≤‡∏ß‡∏£)     : 3.5%\n' +
                        'R (‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß)   : 9%\n' +
                        'N (‡∏Ç‡∏¢‡∏∞)           : 87%\n' +
                        '```',
                        inline: false
                    },
                    {
                        name: 'üéÅ ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•',
                        value: 
                        '```\n' +
                        'SSR - ‡∏¢‡∏®‡∏ï‡∏≥‡∏£‡∏ß‡∏à (‡∏•‡∏î‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏ñ‡∏π‡∏Å‡∏õ‡∏•‡πâ‡∏ô 30%)\n' +
                        'SR - ‡∏õ‡∏∑‡∏ô‡πÄ‡∏ñ‡∏∑‡πà‡∏≠‡∏ô (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏õ‡∏•‡πâ‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à 10%)\n' +
                        'R - ‡∏ö‡∏π‡∏™‡∏ï‡πå‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ 5% 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)\n' +
                        'N - ‡∏Ç‡∏¢‡∏∞ (‡πÅ‡∏•‡∏Å‡πÄ‡∏á‡∏¥‡∏ô 100 ‡∏ö‡∏≤‡∏ó)\n' +
                        '```',
                        inline: false
                    }
                )
                .setFooter({ text: '‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /gacha pull ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏∏‡πà‡∏°' });

            return interaction.reply({ embeds: [infoEmbed] });
        }

        if (subcommand === 'pull') {
            await interaction.deferReply();

            const result = await GachaSystem.pull(
                interaction.user.id,
                interaction.client,
                interaction.guildId
            );

            if (!result.success) {
                const errorMessages = {
                    insufficient_gems: `‚ùå ‡πÄ‡∏û‡∏ä‡∏£‡πÑ‡∏°‡πà‡∏û‡∏≠ (‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ${GachaSystem.costPerPull} ‡πÄ‡∏°‡πá‡∏î, ‡∏°‡∏µ ${result.current} ‡πÄ‡∏°‡πá‡∏î)`,
                    role_add_failed: '‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏¢‡∏®‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô',
                    system_error: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
                };

                return interaction.editReply({
                    content: errorMessages[result.reason] || '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î',
                });
            }

            const embed = GachaSystem.createPullEmbed(result);
            await interaction.editReply({ embeds: [embed] });
        }
    },
};