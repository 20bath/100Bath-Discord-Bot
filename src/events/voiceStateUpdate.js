const { EmbedBuilder } = require('discord.js');
const ExpSystem = require('../utils/expSystem');
const LevelRoles = require('../utils/levelRoles');

// ‡∏™‡∏£‡πâ‡∏≤‡∏á Map ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
const voiceStartTimes = new Map();

module.exports = {
    name: 'voiceStateUpdate',
    async execute(oldState, newState) {
        // ‡πÑ‡∏°‡πà‡∏ô‡∏±‡∏ö EXP ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö bot
        if (newState.member.user.bot) return;

        const userId = newState.member.user.id;
        const guildId = newState.guild.id;
        const memberKey = `${guildId}-${userId}`;

        try {
            // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á Voice
            if (!oldState.channelId && newState.channelId) {
                console.log(`${newState.member.user.tag} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á voice`);
                voiceStartTimes.set(memberKey, Date.now());
            }
            // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á Voice
            else if (oldState.channelId && !newState.channelId) {
                console.log(`${oldState.member.user.tag} ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á voice`);
                const startTime = voiceStartTimes.get(memberKey);
                
                if (!startTime) {
                    console.log('‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô');
                    return;
                }

                const endTime = Date.now();
                const timeSpent = Math.floor((endTime - startTime) / 1000); // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
                console.log(`‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á: ${timeSpent} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`);

                // ‡πÉ‡∏´‡πâ EXP ‡∏ó‡∏∏‡∏Å‡πÜ 1 ‡∏ô‡∏≤‡∏ó‡∏µ
                if (timeSpent >= 60) {
                    const expGained = Math.floor(timeSpent / 60) * 3; // 3 EXP ‡∏ï‡πà‡∏≠‡∏ô‡∏≤‡∏ó‡∏µ
                    console.log(`${oldState.member.user.tag} ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö EXP: ${expGained}`);

                    const result = await ExpSystem.addExp(userId, guildId, expGained);
                    console.log('‡πÄ‡∏û‡∏¥‡πà‡∏° EXP ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', result);

                    // ‡∏ñ‡πâ‡∏≤ Level Up ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
                    if (result.levelUp) {
                        // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏¢‡∏®
                        const roleUpdated = await LevelRoles.updateMemberRoles(oldState.member, result.newLevel);

                        const channel = oldState.guild.channels.cache.get('1348538344287764506');
                        if (channel) {
                            const embed = new EmbedBuilder()
                                .setColor(LevelRoles.getPastelColor(result.newLevel))
                                .setTitle('üéâ Level Up!')
                                .setDescription(
                                    `‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢ ${oldState.member}! ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡πÄ‡∏•‡πÄ‡∏ß‡∏•‡∏≠‡∏±‡∏û‡πÄ‡∏õ‡πá‡∏ô **${result.newLevel}**\n` +
                                    `${roleUpdated ? `‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏¢‡∏® ${LevelRoles.getRoleName(result.newLevel)} üåü` : ''}\n` +
                                    `‡∏à‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á ${Math.floor(timeSpent/60)} ‡∏ô‡∏≤‡∏ó‡∏µ`
                                )
                                .setThumbnail(oldState.member.user.displayAvatarURL())
                                .setTimestamp();

                            await channel.send({ embeds: [embed] });
                            console.log('‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Level Up ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
                        }
                    }
                }

                // ‡∏•‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Map
                voiceStartTimes.delete(memberKey);
            }
            // ‡∏Å‡∏£‡∏ì‡∏µ‡∏¢‡πâ‡∏≤‡∏¢‡∏´‡πâ‡∏≠‡∏á (‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡πÑ‡∏ß‡πâ)
            else if (oldState.channelId !== newState.channelId) {
                console.log(`${newState.member.user.tag} ‡∏¢‡πâ‡∏≤‡∏¢‡∏´‡πâ‡∏≠‡∏á voice`);
                // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÉ‡∏ä‡πâ Map ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
            }
        } catch (error) {
            console.error('Error in voiceStateUpdate:', error);
        }
    }
};